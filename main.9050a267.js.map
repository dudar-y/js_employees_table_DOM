{"version":3,"sources":["scripts/main.js"],"names":["sortPrevTarget","selectedElement","tableBody","document","querySelector","tableHead","rows","typeOfSort","sortTable","sortIndex","array","type","text","cells","innerText","getSortedRow","a","b","isNaN","Number","convertToNumber","localeCompare","sortedRow","sort","rowA","rowB","append","string","slice","split","join","addEventListener","e","indexForSorting","indexOf","target","row","parentElement","classList","remove","add","cityesOfOffice","createInput","nameOfInput","formInputTitle","createElement","formInput","toUpperCase","name","required","setAttribute","createSelect","nameOfSelect","options","formSelect","forEach","option","selectOption","value","inputName","inputPosition","inputAge","inputSalary","selectOffice","buttonSumbit","formFields","constructForm","fieldsOfForm","className","newForm","formField","form","body","pushNotification","title","description","posTop","posRight","oldNotification","style","display","notification","boxSizing","right","top","notificationTitle","notificationDescription","setTimeout","createRow","employee","key","cell","preventDefault","valid","nameValue","firstElementChild","ageValue","positionValue","salaryValue","length","querySelectorAll","employeeData","field","input","salary","toLocaleString","newEmployee","reset","cellOldText","index","cellPadding","getComputedStyle","padding","closest","children","cellInput","width","offsetWidth","parseFloat","includes","focus","trim","ek","blur"],"mappings":"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","file":"main.9050a267.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst tableBody = document.querySelector('tbody');\nconst tableHead = document.querySelector('thead');\nconst rows = [...tableBody.rows];\n\n// Sorting table\n\nlet typeOfSort = 'DESC';\nlet sortPrevTarget;\n\nfunction sortTable(sortIndex, array, type) {\n  const text = rows[0].cells[sortIndex].innerText;\n\n  const getSortedRow = (a, b) => {\n    if (!isNaN(Number(text))) {\n      return a.cells[sortIndex].innerText - b.cells[sortIndex].innerText;\n    };\n\n    if (text[0] === '$') {\n      return convertToNumber(a.cells[sortIndex].innerText)\n        - convertToNumber(b.cells[sortIndex].innerText);\n    };\n\n    return a.cells[sortIndex].innerText\n      .localeCompare(b.cells[sortIndex].innerText);\n  };\n\n  const sortedRow = type === 'ASC'\n    ? array.sort((rowA, rowB) => getSortedRow(rowA, rowB))\n    : array.sort((rowA, rowB) => getSortedRow(rowB, rowA));\n\n  tableBody.append(...sortedRow);\n};\n\ntableHead.addEventListener('click', (e) => {\n  const indexForSorting = [...tableHead.rows[0].cells].indexOf(e.target);\n\n  if (typeOfSort === 'DESC' || sortPrevTarget !== e.target) {\n    sortTable(indexForSorting, [...tableBody.rows], 'ASC');\n    typeOfSort = 'ASC';\n  } else {\n    sortTable(indexForSorting, [...tableBody.rows], 'DESC');\n    typeOfSort = 'DESC';\n  };\n\n  sortPrevTarget = e.target;\n});\n\nfunction convertToNumber(string) {\n  return +string.slice(1).split(',').join('');\n};\n\n// Selected Row\n\nlet selectedElement;\n\ntableBody.addEventListener('click', (e) => {\n  const row = e.target.parentElement;\n\n  if (!selectedElement) {\n    row.classList.add('active');\n    selectedElement = row;\n  } else if (selectedElement !== row) {\n    selectedElement.classList.remove('active');\n\n    row.classList.add('active');\n    selectedElement = row;\n  };\n});\n\n// AddForm Script\n\nconst cityesOfOffice = [\n  'Tokyo',\n  'Singapore',\n  'London',\n  'New York',\n  'Edinburgh',\n  'San Francisco',\n];\n\nfunction createInput(nameOfInput, type) {\n  const formInputTitle = document.createElement('label');\n  const formInput = document.createElement('input');\n\n  formInputTitle.innerText = nameOfInput[0]\n    .toUpperCase() + nameOfInput.slice(1) + ':';\n  formInput.name = nameOfInput;\n  formInput.type = type;\n  formInput.required = true;\n\n  formInput.setAttribute('data-qa', nameOfInput);\n\n  formInputTitle.append(formInput);\n\n  return formInputTitle;\n}\n\nfunction createSelect(nameOfSelect, options) {\n  const formInputTitle = document.createElement('label');\n  const formSelect = document.createElement('select');\n\n  formSelect.name = nameOfSelect;\n\n  formInputTitle.innerText = nameOfSelect[0]\n    .toUpperCase() + nameOfSelect.slice(1) + ':';\n\n  options.forEach(option => {\n    const selectOption = document.createElement('option');\n\n    selectOption.value = option;\n    selectOption.innerText = option;\n\n    formSelect.append(selectOption);\n  });\n\n  formSelect.required = true;\n  formSelect.setAttribute('data-qa', nameOfSelect);\n\n  formInputTitle.append(formSelect);\n\n  return formInputTitle;\n}\n\nconst inputName = createInput('name', 'text');\nconst inputPosition = createInput('position', 'text');\nconst inputAge = createInput('age', 'number');\nconst inputSalary = createInput('salary', 'number');\nconst selectOffice = createSelect('office', cityesOfOffice);\nconst buttonSumbit = document.createElement('button');\n\nbuttonSumbit.type = 'submit';\nbuttonSumbit.innerText = 'Save to table';\n\nconst formFields = [\n  inputName,\n  inputPosition,\n  selectOffice,\n  inputAge,\n  inputSalary,\n  buttonSumbit,\n];\n\nfunction constructForm(fieldsOfForm, className) {\n  const newForm = document.createElement('form');\n\n  newForm.className = className;\n\n  fieldsOfForm.forEach(formField => {\n    newForm.append(formField);\n  });\n\n  return newForm;\n}\n\nconst form = constructForm(formFields, 'new-employee-form');\n\ndocument.body.append(form);\n\n// Notifications\n\nconst pushNotification = (\n  title,\n  description,\n  type,\n  posTop = 10,\n  posRight = 10,\n) => {\n  const oldNotification = document.querySelector('.notification');\n\n  if (oldNotification) {\n    oldNotification.style.display = 'none';\n  };\n\n  const notification = document.createElement('div');\n\n  notification.classList.add('notification', `${type}`);\n  notification.style.boxSizing = 'unset';\n  notification.style.right = `${posRight}px`;\n  notification.style.top = `${posTop}px`;\n\n  notification.setAttribute('data-qa', 'notification');\n\n  const notificationTitle = document.createElement('h2');\n  const notificationDescription = document.createElement('p');\n\n  notificationTitle.className = 'title';\n  notificationTitle.innerText = `${title}`;\n  notificationDescription.innerText = `${description}`;\n\n  notification.append(notificationTitle, notificationDescription);\n\n  document.body.append(notification);\n\n  const removeNotification = () => {\n    notification.remove();\n  };\n\n  setTimeout(removeNotification, 3000);\n};\n\n// Form validation\n\nbuttonSumbit.addEventListener('click', e => {\n  e.preventDefault();\n  e.valid = true;\n\n  const nameValue = inputName.firstElementChild.value;\n  const ageValue = inputAge.firstElementChild.value;\n  const positionValue = inputPosition.firstElementChild.value;\n  const salaryValue = inputSalary.firstElementChild.value;\n\n  if (nameValue.length < 4) {\n    pushNotification(\n      'Name input error',\n      'The Name field contain more than three letters.',\n      'error'\n    );\n\n    e.valid = false;\n\n    return;\n  };\n\n  if (ageValue < 18 || ageValue > 90) {\n    pushNotification('Age input error',\n      'The age of the employee must be between 18 and 90.', 'error'\n    );\n\n    e.valid = false;\n\n    return;\n  };\n\n  if (positionValue.length < 4) {\n    pushNotification('Position input error',\n      'The Position field contain more than three letters.',\n      'error'\n    );\n\n    e.valid = false;\n\n    return;\n  };\n\n  if (!salaryValue.length) {\n    pushNotification(\n      'Salary input error',\n      'The Salary field must contain the employee actual salary.',\n      'error'\n    );\n\n    e.valid = false;\n\n    return;\n  };\n\n  if (e.valid === true) {\n    const fieldsOfForm = [...document.querySelectorAll('label')];\n    const employeeData = {};\n\n    fieldsOfForm.forEach(field => {\n      const input = field.firstElementChild;\n\n      employeeData[input.name] = input.value;\n    });\n\n    employeeData.salary = '$' + Number(employeeData.salary)\n      .toLocaleString('En-en');\n\n    const newEmployee = createRow(employeeData);\n\n    tableBody.append(newEmployee);\n\n    pushNotification(\n      'Data saved successfully',\n      'The entered data has been successfully entered into the table.',\n      'success'\n    );\n\n    form.reset();\n  };\n});\n\nfunction createRow(employee) {\n  const row = document.createElement('tr');\n\n  for (const key in employee) {\n    const cell = document.createElement('td');\n\n    cell.innerText = employee[key];\n\n    row.append(cell);\n  }\n\n  return row;\n};\n\n//  Editing of table cells by double-clicking on it\n\nlet index = -1;\nlet cellOldText;\n\ntableBody.addEventListener('dblclick', e => {\n  const cell = e.target;\n  const cellPadding = getComputedStyle(cell).padding;\n\n  const row = e.target.closest('tr');\n\n  index = [...row.children].indexOf(e.target);\n  cellOldText = cell.innerText;\n\n  let cellInput = document.createElement('input');\n\n  if (index === 2) {\n    cellInput = document.createElement('select');\n\n    cityesOfOffice.forEach(option => {\n      const selectOption = document.createElement('option');\n\n      selectOption.value = option;\n      selectOption.innerText = option;\n\n      cellInput.append(selectOption);\n\n      cellInput.value = cellOldText;\n    });\n  } else {\n    cellInput.type = index === 3 || index === 4 ? 'number' : 'text';\n  }\n\n  cellInput.style.width = `\n    ${cell.offsetWidth - (parseFloat(cellPadding) * 2)}px\n  `;\n  cellInput.className = 'cell-input';\n\n  cellInput.name = 'cellEdit';\n  cellOldText = cell.innerText;\n\n  if (cell.innerText.includes('$')) {\n    cell.innerText = '$';\n    cellInput.value = convertToNumber(cellOldText);\n  } else {\n    cell.innerText = '';\n    cellInput.value = cellOldText;\n  }\n\n  cell.append(cellInput);\n  cellInput.focus();\n\n  cellInput.addEventListener('blur', () => {\n    switch (index) {\n      case 0:\n        if (cellInput.value.trim().length < 4) {\n          pushNotification(\n            'Name input error',\n            'The Name field contain more than three letters.',\n            'error'\n          );\n\n          cell.innerText = cellOldText;\n\n          return;\n        };\n\n        cell.innerText = cellInput.value;\n        break;\n\n      case 1:\n        if (cellInput.value.trim().length < 4) {\n          pushNotification(\n            'Position input error',\n            'The Position field contain more than three letters.',\n            'error'\n          );\n\n          cell.innerText = cellOldText;\n\n          return;\n        };\n\n        cell.innerText = cellInput.value;\n        break;\n\n      case 3:\n        if (cellInput.value < 18 || cellInput.value > 90) {\n          pushNotification(\n            'Age input error',\n            'The age of the employee must be between 18 and 90.',\n            'error'\n          );\n\n          cell.innerText = cellOldText;\n\n          return;\n        };\n\n        cell.innerText = cellInput.value;\n        break;\n\n      case 4:\n        if (!cellInput.value.length) {\n          pushNotification(\n            'Salary input error',\n            'The Salary field must contain the employee actual salary.',\n            'error'\n          );\n          cell.innerText = cellOldText;\n\n          return;\n        };\n\n        cell.innerText = `$${Number(cellInput.value).toLocaleString('En-en')}`;\n\n        break;\n\n      default:\n        if (cell.innerText.includes('$')) {\n          cell.innerText = `$${Number(cellInput.value)\n            .toLocaleString('En-en')}`;\n          break;\n        }\n        cell.innerText = cellInput.value;\n        break;\n    };\n\n    cellInput.remove();\n  });\n\n  cellInput.addEventListener('keydown', (ek) => {\n    if (ek.key !== 'Enter') {\n      return;\n    }\n\n    cellInput.blur();\n  });\n});\n"]}